// install driver
go get go.mongodb.org/mongo-driver/mongo 
go get github.com/joho/godotenv

mongodb+srv://bator:<password>@cluster0.d7giokq.mongodb.net/?retryWrites=true&w=majority

// full code
import (
  "context"
  "fmt"

  "go.mongodb.org/mongo-driver/bson"
  "go.mongodb.org/mongo-driver/mongo"
  "go.mongodb.org/mongo-driver/mongo/options"
)

func main() {
  // Use the SetServerAPIOptions() method to set the Stable API version to 1
  serverAPI := options.ServerAPI(options.ServerAPIVersion1)
  opts := options.Client().ApplyURI("mongodb+srv://bator:<password>@cluster0.d7giokq.mongodb.net/?retryWrites=true&w=majority").SetServerAPIOptions(serverAPI)

  // Create a new client and connect to the server
  client, err := mongo.Connect(context.TODO(), opts)
  if err != nil {
    panic(err)
  }

  defer func() {
    if err = client.Disconnect(context.TODO()); err != nil {
      panic(err)
    }
  }()

  // Send a ping to confirm a successful connection
  if err := client.Database("admin").RunCommand(context.TODO(), bson.D{{"ping", 1}}).Err(); err != nil {
    panic(err)
  }
  fmt.Println("Pinged your deployment. You successfully connected to MongoDB!")
}

// model
type Todo struct {
	ID      primitive.ObjectID `json:"id,omitempty"`
	Text    string             `json:"text,omitempty" validate:"required"`
	Checked bool               `json:"checked,omitempty" validate:"required"`
}




